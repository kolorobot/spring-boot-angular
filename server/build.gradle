buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

jar {
    baseName = 'demo'
    version = '1.0.0'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    /* Utils */
    compile('com.google.guava:guava:19.0')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.assertj:assertj-core:3.3.0')
}

processResources {
    /* Apply filtering only to application.properties to not corrupt binary file (e.g. fonts, docx) during this phase */
    filesMatching('application.properties') {
        filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
                /* Run the build with -PactiveProfiles to set active profiles in application.properties */
                activeProfiles: project.getProperties().containsKey('activeProfiles') ? project.property('activeProfiles') : ''
        ]
    }
}

bootRun {
    // It is for running application with profiles
    // e.g. gradle bootRun -Dspring.profiles.active=embedded,basic
    systemProperties = System.properties
}